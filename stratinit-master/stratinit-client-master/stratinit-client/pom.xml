<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>stratinit-client-master</artifactId>
		<groupId>com.kenstevens.stratinit</groupId>
		<version>1.2</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>stratinit-client</artifactId>
	<name>Strategic Initiative</name>
	<packaging>jar</packaging>
	<description>The client for playing the online strategy game Strategic Initiative</description>
	<url>${jnlp.url}</url>

	<dependencies>
		<dependency>
			<groupId>com.kenstevens.stratinit</groupId>
			<artifactId>stratinit-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.kenstevens.stratinit</groupId>
			<artifactId>stratinit-images</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>${swt.groupId}</groupId>
			<artifactId>${swt.artifactId}</artifactId>
			<version>3.5.2</version>
		</dependency>
		<dependency>
			<groupId>org.simpleframework</groupId>
			<artifactId>simple-xml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
		</dependency>
		<dependency>
			<groupId>dijkstra-java</groupId>
			<artifactId>rollerjm-graphs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-remoting</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo.webstart</groupId>
				<artifactId>webstart-maven-plugin</artifactId>
				<version>1.0-beta-1</version>
				<executions>
					<execution>
						<id>make-jnlp</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- append to the packaging phase. -->
						<!-- <goals> <goal>jnlp</goal> use jnlp, jnlp-inline or jnlp-single 
							as appropriate -->
						<!-- </goals> -->
					</execution>
				</executions>
				<configuration>
					<!--outputDirectory></outputDirectory --> <!-- not required?? -->

					<!-- Set to true to exclude all transitive dependencies. Default is 
						false. -->
					<excludeTransitive>false</excludeTransitive>

					<!-- The path where the libraries are stored within the jnlp structure. 
						not required. by default the libraries are within the working directory -->
					<!-- <libPath></libPath> -->

					<!-- [optional] transitive dependencies filter - if omitted, all transitive 
						dependencies are included -->
					<dependencies>
						<!-- Note that only groupId and artifactId must be specified here. 
							because of a limitation of the Include/ExcludesArtifactFilter -->
						<!-- includes> <include>commons-logging:commons-logging</include> <include>commons-cli:commons-cli</include> 
							</includes -->
						<!-- excludes> <exclude></exclude> <excludes -->
					</dependencies>

					<!-- resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory --> <!-- default value -->

					<!-- JNLP generation -->
					<jnlp>
						<!-- default values -->
						<!-- inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath -->
						<inputTemplate>src/main/jnlp/template.vm</inputTemplate> <!-- relative to inputTemplateResourcePath -->
						<outputFile>stratinit-client-${project.version}.jnlp</outputFile> <!-- defaults to launch.jnlp -->

						<!-- used to automatically identify the jar containing the main class. -->
						<!-- this is perhaps going to change -->
						<mainClass>com.kenstevens.stratinit.main.Launcher</mainClass>
					</jnlp>


					<!-- SIGNING -->
					<!-- defining this will automatically sign the jar and its dependencies, 
						if necessary -->
					<sign>
						<keystore>../../../../../kenstevens.jks</keystore>
						<keypass>charisma</keypass>
						<!-- we need to override passwords easily from the command line. ${keypass} -->
						<storepass>dexterity</storepass> <!-- ${storepass} -->
						<!--storetype>fillme</storetype -->
						<alias>kenstevens</alias>

						<validity>365</validity>

						<!-- only required for generating the keystore -->
						<dnameCn>kenstevens.com</dnameCn>
						<dnameOu>none</dnameOu>
						<dnameO>kenstevens.com</dnameO>
						<dnameL>Toronto</dnameL>
						<dnameSt>Ontario</dnameSt>
						<dnameC>Canada</dnameC>

						<verify>true</verify> <!-- verify that the signing operation succeeded -->
						<!-- KEYSTORE MANAGEMENT -->
						<keystoreConfig>
							<delete>false</delete> <!-- delete the keystore -->
							<gen>false</gen>       <!-- optional shortcut to generate the store. -->
						</keystoreConfig>
					</sign>

					<!-- BUILDING PROCESS -->

					<!-- pack200>true</pack200 -->
					<!-- gzip>true</gzip --> <!-- default force when pack200 false, true when pack200 selected ?? -->

					<!-- causes a version attribute to be output in each jar resource element, 
						optional, default is false -->
					<!-- outputJarVersions>true</outputJarVersions -->
					<unsignAlreadySignedJars>true</unsignAlreadySignedJars>
					<!--install>false</install --> <!-- not yet supported -->
					<verbose>true</verbose>

				</configuration>
			</plugin>
		</plugins>
	</build>
</project>